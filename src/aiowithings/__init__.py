"""Asynchronous Python client for Withings."""

from .const import AUTHORIZATION_URL, TOKEN_URL
from .exceptions import (
    WithingsAuthenticationFailedError,
    WithingsBadStateError,
    WithingsConnectionError,
    WithingsError,
    WithingsErrorOccurredError,
    WithingsInvalidParamsError,
    WithingsTooManyRequestsError,
    WithingsUnauthorizedError,
    WithingsUnknownStatusError,
)
from .helpers import aggregate_measurements
from .models import (
    Activity,
    ActivityDataFields,
    ActivityDataOrigin,
    AuthScope,
    Device,
    DeviceBattery,
    DeviceModel,
    DeviceType,
    Goals,
    Measurement,
    MeasurementAttribution,
    MeasurementGroup,
    MeasurementGroupCategory,
    MeasurementPosition,
    MeasurementType,
    NotificationCategory,
    Services,
    SleepDataFields,
    SleepSeries,
    SleepSeriesTimeData,
    SleepState,
    SleepSummary,
    SleepSummaryDataFields,
    WebhookCall,
    Workout,
    WorkoutCategory,
    WorkoutDataFields,
    get_measurement_type_from_notification_category,
)
from .withings import WithingsClient

__all__ = [
    "AUTHORIZATION_URL",
    "TOKEN_URL",
    "Activity",
    "ActivityDataFields",
    "ActivityDataOrigin",
    "AuthScope",
    "Device",
    "DeviceBattery",
    "DeviceModel",
    "DeviceType",
    "Goals",
    "Measurement",
    "MeasurementAttribution",
    "MeasurementGroup",
    "MeasurementGroupCategory",
    "MeasurementPosition",
    "MeasurementType",
    "NotificationCategory",
    "Services",
    "SleepDataFields",
    "SleepSeries",
    "SleepSeriesTimeData",
    "SleepState",
    "SleepSummary",
    "SleepSummaryDataFields",
    "WebhookCall",
    "WithingsAuthenticationFailedError",
    "WithingsBadStateError",
    "WithingsClient",
    "WithingsConnectionError",
    "WithingsError",
    "WithingsErrorOccurredError",
    "WithingsInvalidParamsError",
    "WithingsTooManyRequestsError",
    "WithingsUnauthorizedError",
    "WithingsUnknownStatusError",
    "Workout",
    "WorkoutCategory",
    "WorkoutDataFields",
    "aggregate_measurements",
    "get_measurement_type_from_notification_category",
]
